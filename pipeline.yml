---
platform: linux

resource_types:
- name: concourse-pipeline
  type: docker-image
  source:
    repository: concourse/concourse-pipeline-resource

resources:
- name: concourse-pipeline
  type: concourse-pipeline
  source:
    target: ((concourse_url))
    teams:
    - name: ((concourse_team))
      username: ((concourse_username))
      password: ((concourse_password))

- name: ci-config
  type: git
  source:
    branch: ((git_branch))
    uri: ((git_pipeline_url))
    private_key: ((git_key))
    git_crypt_key: ((git_crypt_key))

- name: src-docs
  type: git
  source:
    uri: ((git_url))
    branch: ((git_branch))
    private_key: ((git_key))

- name: src-docs-workspace
  type: git
  source:
    uri: ((git_url))
    branch: ((git_workspace_branch))
    private_key: ((git_key))

- name: gh-pages
  type: git
  source:
    uri: ((git_pages_url))
    branch: ((git_pages_branch))
    private_key: ((git_pages_key))

#############################
# JOBS
#############################
jobs:

#############################
# Update Pipeline
#############################
- name: update-pipeline
  plan:
  - get: ci-config
    trigger: true
  - put: concourse-pipeline
    params:
      pipelines:
      - name: ((concourse_pipeline))
        team: ((concourse_team))
        config_file: ci-config/pipeline.yml
        vars_files:
        - ci-config/credentials.yml

#############################
### Build-workspace
#############################
- name: build-workspace
  plan:
  - get: src-docs-workspace
    trigger: true
    params:
      repository: ((git_workspace_branch))
      submodules: all
      submodule_recursive: true
  - task: build_workspace_docs
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: nightwire/docker-mkdocs
          tag: latest
      inputs:
        - name: src-docs-workspace
      run:
        path: sh
        args:
        - -exc
        - |
          cd ./src-docs-workspace
          mkdocs build -c

#############################
### Deployment
#############################
- name: build
  plan:
  - get: src-docs
    trigger: true
    params:
      submodules: all
      submodule_recursive: true
  - task: build_docs
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: nightwire/docker-mkdocs
          tag: latest
      inputs:
        - name: src-docs
      outputs:
        - name: gh-pages
      run:
        path: sh
        args:
        - -exc
        - |
          ls -la
          pwd
          cd ./src-docs
          mkdocs build -c
          cd ../gh-pages
          mkdir -p /root/.ssh/
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          git clone --single-branch -b ((git_pages_branch)) ((git_pages_https_url)) .
          rsync -av ../src-docs/site/ .
          git config user.email "((git_mail))"
          git config user.name "((git_user))"
          git add .
          git commit -m "Update docs."
  - put: gh-pages
    params:
      repository: gh-pages